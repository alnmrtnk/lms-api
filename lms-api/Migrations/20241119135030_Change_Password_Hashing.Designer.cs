// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using lms_api.Infrastructure;

#nullable disable

namespace lms_api.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20241119135030_Change_Password_Hashing")]
    partial class Change_Password_Hashing
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("lms_api.Application.Books.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CopiesAvailable")
                        .HasColumnType("integer");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "F. Scott Fitzgerald",
                            CopiesAvailable = 5,
                            Genre = "Fiction",
                            ISBN = "9780743273565",
                            PublishedDate = new DateTime(1925, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Great Gatsby"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Harper Lee",
                            CopiesAvailable = 3,
                            Genre = "Fiction",
                            ISBN = "9780061120084",
                            PublishedDate = new DateTime(1960, 7, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "To Kill a Mockingbird"
                        },
                        new
                        {
                            Id = 3,
                            Author = "George Orwell",
                            CopiesAvailable = 4,
                            Genre = "Romance",
                            ISBN = "9780451524935",
                            PublishedDate = new DateTime(1949, 6, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "1984"
                        },
                        new
                        {
                            Id = 4,
                            Author = "J.R.R. Tolkien",
                            CopiesAvailable = 6,
                            Genre = "Fantasy",
                            ISBN = "9780547928227",
                            PublishedDate = new DateTime(1937, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Hobbit"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Dan Brown",
                            CopiesAvailable = 2,
                            Genre = "Mystery",
                            ISBN = "9780307474278",
                            PublishedDate = new DateTime(2003, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Da Vinci Code"
                        });
                });

            modelBuilder.Entity("lms_api.Application.Borrows.Models.Borrow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("BorrowDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Borrows");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            BorrowDate = new DateTime(2024, 11, 9, 13, 50, 30, 113, DateTimeKind.Utc).AddTicks(4829),
                            ReturnDate = new DateTime(2024, 11, 17, 13, 50, 30, 113, DateTimeKind.Utc).AddTicks(4836),
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            BookId = 3,
                            BorrowDate = new DateTime(2024, 11, 14, 13, 50, 30, 113, DateTimeKind.Utc).AddTicks(4843),
                            UserId = 4
                        });
                });

            modelBuilder.Entity("lms_api.Application.Reservations.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 2,
                            ExpirationDate = new DateTime(2024, 11, 20, 13, 50, 30, 113, DateTimeKind.Utc).AddTicks(4866),
                            ReservationDate = new DateTime(2024, 11, 18, 13, 50, 30, 113, DateTimeKind.Utc).AddTicks(4865),
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            BookId = 4,
                            ExpirationDate = new DateTime(2024, 11, 20, 7, 50, 30, 113, DateTimeKind.Utc).AddTicks(4869),
                            ReservationDate = new DateTime(2024, 11, 18, 7, 50, 30, 113, DateTimeKind.Utc).AddTicks(4868),
                            UserId = 4
                        });
                });

            modelBuilder.Entity("lms_api.Application.Users.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@library.com",
                            PasswordHash = "PrP+ZrMeO00Q+nC1ytSccRIpSvauTkdqHEBRVdRaoSE=",
                            Role = "Admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "librarian@library.com",
                            PasswordHash = "74mVnB0WDowisJu3rvXBOX6l6ao0sS1QV2JDb8MYrVE=",
                            Role = "Librarian",
                            Username = "librarian"
                        },
                        new
                        {
                            Id = 3,
                            Email = "reader1@library.com",
                            PasswordHash = "YoKgFiHFuNGeK6R4gJsjrJc/G0gmVq2bs1qMaukDMHA=",
                            Role = "Reader",
                            Username = "reader1"
                        },
                        new
                        {
                            Id = 4,
                            Email = "reader2@library.com",
                            PasswordHash = "7SMDScymeN3URXYx4m2NRKROWZGRxhmjUrXvfR+MakY=",
                            Role = "Reader",
                            Username = "reader2"
                        });
                });

            modelBuilder.Entity("lms_api.Application.Borrows.Models.Borrow", b =>
                {
                    b.HasOne("lms_api.Application.Books.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lms_api.Application.Users.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("lms_api.Application.Reservations.Models.Reservation", b =>
                {
                    b.HasOne("lms_api.Application.Books.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("lms_api.Application.Users.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
